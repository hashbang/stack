apiVersion: apps/v1
kind: Deployment
metadata:
  name: userdb-db-write
  labels:
    app: userdb
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: userdb-db-write
  template:
    metadata:
      labels:
        deployment: userdb-db-write
    spec:
      initContainers:
      - name: userdb-init-schema
        image: registry.localhost:5000/stack-base
        volumeMounts:
        - name: userdb-data
          mountPath: /data
        - name: userdb-schema
          mountPath: /schema
        command: ["/bin/sh", "-c"]
        args:
          - set -e;
            [ -z "$(ls -A /schema)" ] || exit 0;
            git clone https://github.com/hashbang/userdb.git;
            cd userdb;
            make build;
            cat out/* > /schema/bundle.sql;
            chown -R 100:100 /schema;
            chown -R 100:100 /data;
            chmod 700 /data;
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      - name: userdb-init-createdb
        image: registry.localhost:5000/postgres
        volumeMounts:
        - name: userdb-data
          mountPath: /data
        - name: userdb-schema
          mountPath: /schema
        command: ["/bin/sh", "-c"]
        args:
          - set -e;
            [ -f "/data/PG_VERSION" ] && exit 0;
            initdb /data;
            postgres &
            until pg_isready >/dev/null 2>&1; do true; done;
            echo 'create database userdb;' > /tmp/createdb.sql;
            psql -d "postgres" < /tmp/createdb.sql;
            psql -d "userdb" < /schema/bundle.sql;
      containers:
      - name: postgres
        image: registry.localhost:5000/postgres
        ports:
        - name: tcp
          containerPort: 5432
        volumeMounts:
        - name: userdb-data
          mountPath: /data
        - name: userdb-schema
          mountPath: /schema
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: userdb-db-write
              key: password
      volumes:
      - name: userdb-schema
        emptyDir: {}
      - name: userdb-data
        persistentVolumeClaim:
          claimName: userdb-data

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: userdb-api
  labels:
    app: userdb
spec:
  replicas: 3
  selector:
    matchLabels:
      deployment: userdb-api
  template:
    metadata:
      labels:
        deployment: userdb-api
    spec:
      containers:
      - name: postgrest
        image: registry.localhost:5000/postgrest
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: PGRST_SERVER_PORT
          value: '3000'
        - name: PGPORT
          value: '5432'
        - name: PGHOST
          value: userdb-db-write
        - name: PGDATABASE
          value: userdb
        - name: PGDATABASE
          value: userdb
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: userdb-db-write
              key: password
        - name: PGRST_DB_URL
          value: postgresql://$(PGDATABASE)?host=$(PGHOST)&user=$(PGUSER)
